services:
  kong-database:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
    ports:
      - "5432:5432"
    networks:
      - app-network

  kong:
    image: kong/kong-gateway:latest
    environment:
      KONG_DATABASE: off
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"
    volumes:
      - ./kong.yml:/usr/local/kong/declarative/kong.yml
    networks:
      - app-network

  konga:
    image: pantsel/konga:latest
    platform: linux/amd64
    environment:
      NODE_ENV: production
    ports:
      - "1337:1337"
    depends_on:
      - kong
    networks:
      - app-network

  auth-service:
    build: ./auth
    ports:
      - "8080:8080"
      - "50052:50052"
    depends_on:
      - redis
      - user-service
    environment:
      - REDIS_ADDR=redis:6379
      - USER_SERVICE_ADDR=user-service:50051
      - JWT_PRIVATE_KEY=your_secret_key_123
    networks:
      - app-network

  user-service:
    build: ./user
    ports:
      - "50051:50051"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://admin:admin123@postgres:5432/auth_db?sslmode=disable
      - GRPC_PORT=50051
    networks:
      - app-network

  product-service:
    build: ./product
    ports:
      - "8081:8081"
    depends_on:
      - auth-service
      - postgres
    environment:
      - AUTH_SERVICE_ADDR=auth-service:50052
      - DATABASE_URL=postgresql://admin:admin123@postgres:5432/auth_db?sslmode=disable
    networks:
      - app-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin123
      - POSTGRES_DB=auth_db
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d auth_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  redis:
    image: redis:6-alpine
    ports:
      - "6380:6379"
    networks:
      - app-network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    networks:
      - app-network

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:

networks:
  app-network:
    driver: bridge